plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

version = project.properties[project.name + '.version']
group = 'io.github.mcengine'

ext {
    user_git_name = System.getenv('USER_GIT_NAME')
    user_github_token = System.getenv('USER_GITHUB_TOKEN')
    jarName = System.getenv('PROJECT_NAME') ?: 'MCEngineMarket'
}

allprojects {
    group = 'io.github.mcengine'

    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        mavenCentral()
        mavenLocal()

        maven {
            url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots'
            content {
                includeGroup 'org.bukkit'
                includeGroup 'org.spigotmc'
            }
        }

        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://oss.sonatype.org/content/repositories/central' }

        ext.configureGitHubRepo = { repoName, repoUrl ->
            maven {
                name = repoName
                url = uri(repoUrl)
                credentials {
                    username = project.user_git_name
                    password = project.user_github_token ?: project.repository_token ?: project.organization_token
                }
            }
        }

        configureGitHubRepo('MCEngine Core API', 'https://maven.pkg.github.com/MCEngine/core-api')
        configureGitHubRepo('MCEngine Currency API', 'https://maven.pkg.github.com/MCEngine/currency-api')
        configureGitHubRepo('MCEngine Currency Common', 'https://maven.pkg.github.com/MCEngine/currency-common')
    }
}

dependencies {
    compileOnly 'io.github.mcengine:core-api:1.0.6-RELEASE'
    compileOnly 'io.github.mcengine:currency-api:1.0.4-RELEASE'
    compileOnly 'io.github.mcengine:currency-common:1.0.2-RELEASE'

    compileOnly 'org.spigotmc:spigot-api:1.21.7-R0.1-SNAPSHOT'
}

shadowJar {
    archiveClassifier = null
    archiveBaseName = project.jarName
}

tasks.named('jar').configure {
    enabled = false
}

build.dependsOn(shadowJar)
